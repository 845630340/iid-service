buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        maven {
            url = "http://repo.inspur.com/artifactory/maven-iopdev-virtual"
            credentials {
                username 'iop'
                password 'AP7u6RRiWi36mptXCpBMiUaQE4p'
            }
        }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = "$group"
version = "$version"

sourceCompatibility = 1.8

repositories {
    maven {
        url = "$repoRoot$iopdev"
        credentials {
            username "$repoIopUsername"
            password "$repoIopPassword"
        }
    }
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
    maven {
        url = "$repoRoot$ecbu"
        credentials {
            username "$repoEcbuUsername"
            password "$repoEcbuPassword"
        }
    }
}
configurations {
    providedRuntime
    // remove default logger
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-cache')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-redis')
    compile('org.springframework.boot:spring-boot-starter-amqp:2.0.5.RELEASE')
    compile('org.springframework.boot:spring-boot-autoconfigure:2.0.5.RELEASE')
    compile("org.springframework.boot:spring-boot-starter-websocket:${springBootVersion}")
    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile('com.inspur.bss:common-sdk:0.2.10')
    //compile('com.inspur.cloud.bss.common:instance-mq-starter:1.3.0')
    runtime('mysql:mysql-connector-java')
    compile 'com.alibaba:fastjson:1.2.49'
    compile('org.liquibase:liquibase-core')
    compile("com.inspur.cloud:liquibase-schema:3.6")
    //compile("com.inspur.fusion:fusion-async-delay:1.0.0")
    compileOnly 'org.projectlombok:lombok:1.18.2'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
    compile('io.micrometer:micrometer-registry-prometheus')
    compile('com.github.ben-manes.caffeine:caffeine:2.6.2')
    compile(group: 'org.springframework.integration', name: 'spring-integration-redis', version: '5.0.7.RELEASE')
    compile group: 'com.github.pagehelper', name: 'pagehelper-spring-boot-starter', version: '1.2.10'
    compile('com.inspur.iam:iam-adapter-java:1.9.7') {
        exclude module: 'log4j-to-slf4j'
        exclude module: 'log4j'
        exclude module: 'slf4j-log4j12'
    }

    // 部门通用工具包
    compile('com.inspur.cloudframework:common-utils:0.7.0')
    // CMS对接
    compile('com.inspur.logback:json-layout:1.1.0')
    compile('com.alibaba:easyexcel:2.2.6')
    runtimeOnly("com.inspur.cloud:liquibase-ext:0.1.0")
}

bootJar {
    baseName = "$jarBaseName"
    version = "$version"
}

jacoco {
    toolVersion = '0.8.1'
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true

        xml.destination file("${buildDir}/reports/jacoco/jacocoReport/jacocoXml.xml")
        csv.destination file("${buildDir}/reports/jacoco/jacocoReport/jacocoCsv.csv")
        html.destination file("${buildDir}/reports/jacoco/jacocoReport/jacocoHtml")
    }
}
test {
    jacoco {
        destinationFile = file("$buildDir/jacoco/test.exec")
    }
}

processResources {
    from('src/main/java') {
        include '**/dao/*.xml'
    }
}
